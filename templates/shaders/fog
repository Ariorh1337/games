#ifdef GL_ES
precision mediump float;
#endif

#extension GL_OES_standard_derivatives : enable

uniform float time;
        uniform vec2 resolution;
        varying vec2 vUv;
        
        #define TAU 6.28318530718
        
        #define TILING_FACTOR 0.5
        #define MAX_ITER 9
        
        #define R iResolution
        #define T (time/2.+2.)
        
        #define A vec3(0,1,0.005)
        #define B {vec2 m=fract(p),l=dot(p-m,A.yz)+A.xz,r=mix(fract(57.*sin(l++)),fract(57.*sin(l)),(m*=m*(3.-m-m)).x);gl_FragColor+=mix(r.x,r.y,m.y)/(s+=s);p*=mat2(1,1,1,-1);}
        
        
        float waterHighlight(vec2 p, float comp_time, float foaminess)
        {
            vec2 i = vec2(p);
            float c = 0.0;
            float foaminess_factor = mix(1.0, 6.0, foaminess);
            float inten = .005 * foaminess_factor;
        
            for (int n = 0; n < MAX_ITER; n++)
            {
                float t = comp_time * (1.0 - (3.5 / float(n+1)));
                i = p + vec2(cos(t - i.x) + sin(t + i.y), sin(t - i.y) + cos(t + i.x));
                c += 1.0/length(vec2(p.x / (sin(i.x+t)),p.y / (cos(i.y+t))));
            }
            c = 0.2 + c / (inten * float(MAX_ITER));
            c = 1.17-pow(c, 1.4);
            c = pow(abs(c), 8.0);
            return c / sqrt(foaminess_factor);
        }
        
        void main( void ) {
            float comp_time = time * 0.1+23.0;
            vec2 uv = (gl_FragCoord.xy) / resolution.xy;
            vec2 uv_square = vec2(uv.x * resolution.x / resolution.y, uv.y);
            float dist_center = pow(2.0*length(uv - 0.5), 4.0);
        
            float foaminess = smoothstep(2.0, 4.0, dist_center);
            float clearness = 0.1 + 0.9*smoothstep(0.5, 0.5, dist_center);
        
            vec2 p = mod(uv_square*TAU*TILING_FACTOR, TAU)-250.0;
        
            float c = waterHighlight(p, comp_time, foaminess);
        
            vec3 color = vec3(c);
            color = clamp(color, 0.0, 0.1);
        	
		    color = mix(color, color, clearness);
            gl_FragColor = vec4(color, 1.0) + sin(.1+p.yyxy*0.1)/25.;
        }